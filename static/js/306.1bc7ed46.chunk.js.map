{"version":3,"file":"static/js/306.1bc7ed46.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.styled.js","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  background-color: rgb(0, 0, 0, 0.5);\n`;\n","import { CircleLoader } from 'react-spinners';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <CircleLoader color=\"#032010\" size={150} />\n    </LoaderWrapper>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesItemLink = styled(Link)`\n  color: white;\n  font-size: 18px;\n  text-decoration: none;\n  &.active {\n    color: #9ff6b5;\n  }\n  &:hover:not(.active) {\n    color: #306e07;\n  }\n`;\n","import React from 'react';\nimport { MoviesItemLink } from './MoviesList.styled';\nimport { useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul>\n        {movies.map(({ title, name, id }) => (\n          <li key={id}>\n            <MoviesItemLink state={{ from: location }} to={`/movies/${id}`}>\n              {title || name}\n            </MoviesItemLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesList;\n","import styled from '@emotion/styled';\n\nexport const MoviesSearchWrapper = styled.div`\n  padding: 30px;\n  background-color: #99b699;\n  color: white;\n  height: 80vh;\n  & form {\n    display: flex;\n    justify-content: center;\n    gap: 10px;\n  }\n  & input {\n    border-radius: 8px;\n    border: 2px solid #032010;\n    height: 25px;\n    outline: none;\n  }\n  & button {\n    border-radius: 8px;\n    border: 2px solid #032010;\n    height: 29.91px;\n    cursor: pointer;\n  }\n  & button:hover {\n    background-color: #306e07;\n    color: white;\n  }\n  & li {\n    font-size: 18px;\n    float: left;\n    clear: left;\n  }\n  & li:hover {\n    color: #306e07;\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nexport const SearchForm = ({ onSubmit }) => {\n  const [searchText, setSearchText] = useState('');\n  const handleChange = event => {\n    setSearchText(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (searchText.trim() === '') {\n      toast.info('Please enter your request');\n      return;\n    }\n    onSubmit(searchText);\n    setSearchText('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"text\"\n        name=\"searchText\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search your movie\"\n        value={searchText}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchgMoviesByName } from 'services/api';\nimport { MoviesSearchWrapper } from './Movies.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/Form/Form';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const movie = searchParams.get('movie');\n    if (!movie) return;\n    setIsLoading(true);\n\n    fetchgMoviesByName(movie)\n      .then(setMovies)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [searchParams]);\n\n  const handleSubmit = movie => {\n    setSearchParams({ movie });\n  };\n  return (\n    <MoviesSearchWrapper>\n      <SearchForm onSubmit={handleSubmit} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n      {isLoading && <Loader />}\n    </MoviesSearchWrapper>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a62896418b9c78ff6682cfb14307cf6b';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const fetchgMoviesByName = async searchText => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchText}`\n  );\n  return data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data.cast;\n};\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n"],"names":["LoaderWrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","CircleLoader","color","size","MoviesItemLink","Link","_ref","movies","location","useLocation","_Fragment","map","_ref2","title","name","id","state","from","to","concat","MoviesSearchWrapper","SearchForm","onSubmit","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_jsxs","event","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","setMovies","_useState3","_useState4","isLoading","setIsLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","movie","get","fetchgMoviesByName","then","finally","length","MoviesList","BASE_URL","API_KEY","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","sent","abrupt","results","stop","apply","arguments","_callee2","_yield$axios$get2","_context2","_x","fetchMovieById","_ref3","_callee3","movieId","_yield$axios$get3","_context3","_x2","fetchMovieCast","_ref4","_callee4","_yield$axios$get4","_context4","cast","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}