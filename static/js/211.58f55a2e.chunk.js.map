{"version":3,"file":"static/js/211.58f55a2e.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/NestedRoutes/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const LoaderWrapper = styled.div`\n  position: fixed;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 0;\n  left: 0;\n  background-color: rgb(0, 0, 0, 0.5);\n`;\n","import { CircleLoader } from 'react-spinners';\nimport { LoaderWrapper } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderWrapper>\n      <CircleLoader color=\"#032010\" size={150} />\n    </LoaderWrapper>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const defaultImg =\n    'https://creazilla-store.fra1.digitaloceanspaces.com/emojis/44292/bust-in-silhouette-emoji-clipart-md.png';\n\n  useEffect(() => {\n    setIsLoading(true);\n    fetchMovieCast(movieId)\n      .then(setCast)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  if (!cast) {\n    return () => {\n      setIsLoading(true);\n    };\n  }\n  return (\n    <>\n      {cast?.length > 0 ? (\n        <ul>\n          {cast.map(({ id, name, character, profile_path }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : defaultImg\n                }\n                width={125}\n                alt=\"actor foto\"\n              />\n              <h3>{name}</h3>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h3>There is not cast for this movie.</h3>\n      )}\n      {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'a62896418b9c78ff6682cfb14307cf6b';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const fetchgMoviesByName = async searchText => {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchText}`\n  );\n  return data.results;\n};\n\nexport const fetchMovieById = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieCast = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n\n  return data.cast;\n};\nexport const fetchMovieReviews = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n"],"names":["LoaderWrapper","styled","_templateObject","_taggedTemplateLiteral","Loader","_jsx","children","CircleLoader","color","size","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchMovieCast","then","finally","_jsxs","_Fragment","length","map","_ref","id","name","character","profile_path","src","concat","width","alt","BASE_URL","API_KEY","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$axios$get","data","_context","prev","next","axios","sent","abrupt","results","stop","apply","arguments","fetchgMoviesByName","_ref2","_callee2","searchText","_yield$axios$get2","_context2","_x","fetchMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}